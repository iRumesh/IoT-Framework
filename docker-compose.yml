# Description: Docker compose file for the IoT stack
# Author: Rumesh
# Stack: Node-RED, Mosquitto, Portainer, Adminer, MySQL

services:
# ==============================================================================
  # nodered
  nodered:
    build: ./node-red
    image: irumesh-node-redi
    container_name: node-redc
    environment:
      - TZ=Asia/Colombo
      - NODE_RED_USERNAME=${NODERED_USERNAME}
      - NODE_RED_PASSWORD=${NODERED_PASSWORD}
    restart: always
    ports:
      - "1880:1880" #Host:container
    volumes:
      - node-red-data:/data
    networks:
      - iot-network
    depends_on:
      - db
# ==============================================================================
  # Eclipse Mosquitto MQTT Broker
  mosquitto:
    build:
      context: ./mosquitto
      dockerfile: Dockerfile
      args:
        - MOSQUITTO_VERSION=${MOSQUITTO_VERSION:-latest}
    environment:
      - MOSQUITTO_USERNAME=${MOSQUITTO_USERNAME}
      - MOSQUITTO_PASSWORD=${MOSQUITTO_PASSWORD}
    image: irumesh-mosquittoi
    container_name: mosquittoc
    restart: always
    ports:
      - 1883:1883
    volumes:
      - /mosquitto/data:/mosquitto/data
      - /mosquitto/log:/mosquitto/log
    networks:
      - iot-network
# ==============================================================================
  # Portainer GUI for docker management
  portainer:
    build: ./portainer
    container_name: portainerc
    image: irumesh-portaineri
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    command:
   #   - '-H unix:///var/run/docker.sock'
      - '--admin-password-file=/run/secrets/portainer_admin_password'
      - '--no-analytics'
    logging:
      driver: json-file
      options:
        max-size: "4m"
        max-file: "10"
    networks:
      - iot-network
    ports:
      - "9000:9000"
    secrets:
      - portainer_admin_password


# ============================================================================== 
# Adminer for MySQL database management
  adminer:
    image: adminer
    container_name: adminerc
    restart: always
    ports:
      - 8080:8080
    networks:
      - iot-network

  db:
    image: mysql:5.6
    container_name: mysqlc
    restart: always
    ports:
      - 3306:3306
    # command: --init-file /data/application/init.sql
    # volumes:
    #   - ./mysql/init.sql:/data/application/init.sql
    #   - ./mysql/db_data:/var/lib/mysql

    environment:
      - MYSQL_ROOT_USER=${MYSQL_ROOT_USER}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}

    networks:
      - iot-network
# ==============================================================================     

volumes:
  node-red-data:
  data:
  log:
  portainer_data:
  # db_data:
  # init.sql:

networks:
  iot-network: 
    driver: bridge

secrets:
  portainer_admin_password:
    file: ./portainer/portainer_admin_password